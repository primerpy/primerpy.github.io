<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on PrimerPy</title>
    <link>http://www.primerpy.com/categories/javascript/</link>
    <description>Recent content in Javascript on PrimerPy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>isaaczhou85@gmail.com (Isaac Zhou)</managingEditor>
    <webMaster>isaaczhou85@gmail.com (Isaac Zhou)</webMaster>
    <lastBuildDate>Mon, 06 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.primerpy.com/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ES2015</title>
      <link>http://www.primerpy.com/post/js/es2015/</link>
      <pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/js/es2015/</guid>
      <description>ES6 has brought a huge number of updates to the Javascript languages. Some of them are extremely handy such as arrow functions. However, we also need to pay extra attention to some of the nitty gritty nuisances. For example, arrow functions are nice and succinct however it doesn&#39;t have its own this or arguments keywords, which could be useful for some cases but the coder need to really understand the context.</description>
    </item>
    
    <item>
      <title>Javascript keyword &#34;this&#34;</title>
      <link>http://www.primerpy.com/post/js/the-keyword-this/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/js/the-keyword-this/</guid>
      <description>&#34;this&#34; is a reserved keyword in Javscript. It is usually determined by how a function is called (&#34;execution context&#34;). It can&#39;t be set by assignment during execution, and it may be different each time the function is called. Whenever a javascript function is run, two js keywords are given to that function: &#34;arguments&#34; and &#34;this&#34;. &#34;this&#34; can be determined using four rules: Global, Implicit, Explicit and New. We also discuss how to use apply, call and bind functions to apply the explicit rules.</description>
    </item>
    
    <item>
      <title>D3 Embedded with Jupyter Notebook</title>
      <link>http://www.primerpy.com/post/js/d3-visualization-embedded-in-jupyter-notebook/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/js/d3-visualization-embedded-in-jupyter-notebook/</guid>
      <description>In this tutorial, I will embed D3 object into Jupyter Notebook. It&#39;s not recommended to write D3 or javascript in general with Jupyter notebook, but I could see some benefits from a literate programming perspective. I can see the results right away instead of rendering the whole html page or use Blockbuilder, which is actually pretty neat. I would definitely use blockbuilder on the fly or learn from others&#39; works.</description>
    </item>
    
  </channel>
</rss>