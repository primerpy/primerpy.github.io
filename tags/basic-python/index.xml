<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basic Python on PrimerPy</title>
    <link>http://www.primerpy.com/tags/basic-python/</link>
    <description>Recent content in Basic Python on PrimerPy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>isaaczhou85@gmail.com (Isaac Zhou)</managingEditor>
    <webMaster>isaaczhou85@gmail.com (Isaac Zhou)</webMaster>
    <lastBuildDate>Sun, 05 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.primerpy.com/tags/basic-python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python Function</title>
      <link>http://www.primerpy.com/post/python/python-function/</link>
      <pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/python/python-function/</guid>
      <description>Function is a powerful concept in any programming languages. It&#39;s very useful to avoid repetitive coding or WET (Write Everything Twice+) coding style. Instead we should promote DRY (Don&#39;t Repeat Yourself) style. In this tutorial, we will only cover the basics about the Python Functions. How to define a function, parameters (single, multiple, optional), return multiple values, write proper docstrings to document the function. At the end of the project, I also provided a synthesis exercise to show how to build a function and use it conveniently in a more real world scenario.</description>
    </item>
    
    <item>
      <title>Python Fundamentals</title>
      <link>http://www.primerpy.com/post/python/python-fundamentals/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/python/python-fundamentals/</guid>
      <description>In this tutorial, we will learn all the basics to start with Python. Topics covered here includes data types, lists, loops, dictionary etc. We will also take a peek at some more advanced techniques such as list comprehension and dictionary comprehension. Although there are a number of libraries that can make a Pythonist&#39;s life even easier, have a solid foundation would be a key to understand and learn more advanced topics.</description>
    </item>
    
  </channel>
</rss>