<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on PrimerPy</title>
    <link>http://www.primerpy.com/tags/python/</link>
    <description>Recent content in Python on PrimerPy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>isaaczhou85@gmail.com (Isaac Zhou)</managingEditor>
    <webMaster>isaaczhou85@gmail.com (Isaac Zhou)</webMaster>
    <lastBuildDate>Wed, 08 Nov 2017 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="http://www.primerpy.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Prep &amp; Review</title>
      <link>http://www.primerpy.com/post/python/multiple-plots-prep/</link>
      <pubDate>Wed, 08 Nov 2017 00:00:00 -0500</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/python/multiple-plots-prep/</guid>
      <description>First, let&amp;rsquo;s review how to create single chart. We&amp;rsquo;ll use unemployment data from US Bureau of Labor Statistics. Here are the steps
 Use pandas to load a csv file to a DataFrame Use Pandas.to_datetime to convert the DATE column into a Series of datetime values Create a line chart that visualize the unemployment from 1948:  x-values should be the first 12 values in the DATE column y-values should be the first 12 values in the VALUE column  Formatting the chart  use pyplot.</description>
    </item>
    
    <item>
      <title>Binary Addition</title>
      <link>http://www.primerpy.com/post/python/binary-addition/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/python/binary-addition/</guid>
      <description>We can add binary numbers together, just like we can with base 10 numbers
In the example below:
 a is in base 10 &amp;ndash; because we have 10 possible digits, the highest value we can represent with one digit is 9 When we want to represent a value one higher, we need to add another digit. a now has two digits &amp;ndash; we incremented the invisible leading digit, which was 0 and is now 1, and set the last digit back to zero.</description>
    </item>
    
    <item>
      <title>Python Function</title>
      <link>http://www.primerpy.com/post/python/python-function/</link>
      <pubDate>Sun, 05 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/python/python-function/</guid>
      <description>Function is a powerful concept in any programming languages. It&#39;s very useful to avoid repetitive coding or WET (Write Everything Twice+) coding style. Instead we should promote DRY (Don&#39;t Repeat Yourself) style. In this tutorial, we will only cover the basics about the Python Functions. How to define a function, parameters (single, multiple, optional), return multiple values, write proper docstrings to document the function. At the end of the project, I also provided a synthesis exercise to show how to build a function and use it conveniently in a more real world scenario.</description>
    </item>
    
    <item>
      <title>Python Fundamentals</title>
      <link>http://www.primerpy.com/post/python/python-fundamentals/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      <author>isaaczhou85@gmail.com (Isaac Zhou)</author>
      <guid>http://www.primerpy.com/post/python/python-fundamentals/</guid>
      <description>In this tutorial, we will learn all the basics to start with Python. Topics covered here includes data types, lists, loops, dictionary etc. We will also take a peek at some more advanced techniques such as list comprehension and dictionary comprehension. Although there are a number of libraries that can make a Pythonist&#39;s life even easier, have a solid foundation would be a key to understand and learn more advanced topics.</description>
    </item>
    
  </channel>
</rss>